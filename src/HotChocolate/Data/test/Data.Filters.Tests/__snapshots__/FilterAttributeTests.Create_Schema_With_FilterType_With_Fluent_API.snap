schema {
  query: Query2
}

type Foo {
  bar: String!
  baz: Int!
  qux: Int
}

type Query2 {
  foos(where: FooFilter): [Foo!]!
}

input FooFilter {
  and: [FooFilter!]
  bar: StringOperationInputFilter
  or: [FooFilter!]
}

input StringOperationInputFilter {
  and: [StringOperationInputFilter!]
  contains: String
  endsWith: String
  eq: String
  in: [String]
  ncontains: String
  nendsWith: String
  neq: String
  nin: [String]
  nstartsWith: String
  or: [StringOperationInputFilter!]
  startsWith: String
}

"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."
scalar Int

"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."
scalar String
